{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nRightONE = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nRightTWO = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nLeftONE = Motor(Ports.PORT4, GearSetting.RATIO_18_1, True)\nLeftTWO = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      3400Z V5 Robot\n#\tAuthor:       Arav Jain & Arsh Jaiswal\n#\tCreated:      10/15/2024\n#\tDescription:  The code for the top team's robot!\n# \n# ------------------------------------------\n\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nRightONE = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)\nRightTWO = Motor(Ports.PORT3, GearSetting.RATIO_18_1, True)\nLeftTWO = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nLeftONE = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\n\n# Begin project code\n\nclass CustomMotorGroup:\n    def __init__(self, *motors):\n        self.motors = motors\n\n    def __getattr__(self, name):\n        def method(*args, **kwargs):\n            for motor in self.motors:\n                if hasattr(motor, name):\n                    getattr(motor, name)(*args, **kwargs)\n                #else:\n                    #raise AttributeError(f\"'{type(motor).__name__}' object has no attribute '{name}'\")\n        return method\n\n# Define motor groups\nAllDriveMotors = CustomMotorGroup(RightONE, LeftONE, RightTWO, LeftTWO)\nFrontMotors = CustomMotorGroup(LeftONE, RightONE)\nBackMotors = CustomMotorGroup(LeftTWO, RightTWO)\nRightMotors = CustomMotorGroup(LeftONE, LeftTWO)\nLeftMotors = CustomMotorGroup(RightONE, RightTWO)\n\ndef autonomous():\n    brain.screen.clear_screen()\n    brain.screen.print(\"3400Z Autonomous Code\")\n    \n    AllDriveMotors.set_velocity(50, PERCENT)\n\n    LeftMotors.spin(FORWARD)\n    RightMotors.spin(REVERSE)\n\nautonomous()\n","textLanguage":"python","robotConfig":[{"port":[1],"name":"RightONE","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[3],"name":"RightTWO","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[4],"name":"LeftONE","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"LeftTWO","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.5","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}